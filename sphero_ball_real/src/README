To run the program, first run the lines below in terminal to connect each robot and set its color.
If the colors don't change, then you probably need to rerun the connection file.
Take note of which sphero has which address so that you can manually disconnect a robot via bluetooth if it stops publishing its odom info.


python sphero_connect.py 1
rostopic pub -1 sphero1/set_color std_msgs/ColorRGBA '255' '128' '23' '0'
python sphero_connect.py 2
rostopic pub -1 sphero2/set_color std_msgs/ColorRGBA '0' '200' '90' '0'
python sphero_connect.py 3
rostopic pub -1 sphero3/set_color std_msgs/ColorRGBA '255' '128' '23' '0'
python sphero_connect.py 4
rostopic pub -1 sphero4/set_color std_msgs/ColorRGBA '100' '3' '100' '0'
python sphero_connect.py 5
rostopic pub -1 sphero5/set_color std_msgs/ColorRGBA '255' '128' '23' '0'
python sphero_connect.py 6
rostopic pub -1 sphero6/set_color std_msgs/ColorRGBA '100' '3' '100' '0'
python sphero_connect.py 7
rostopic pub -1 sphero7/set_color std_msgs/ColorRGBA '255' '128' '23' '0'
python sphero_connect.py 8
rostopic pub -1 sphero8/set_color std_msgs/ColorRGBA '100' '3' '100' '0'

Then place the leader robots facing the follower ones, as in our simulation, organized by number, left to right.

Then do:

roslaunch sphero_ball_real ball.launch n:=4


At this point, the "dance" can begin with leaders finding followers, however the code right now has dummy values for the initial positions of each robot, so we need to figure out what values to actually use.
